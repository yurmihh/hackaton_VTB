import telebot
from telebot import types
from test2 import reader


TOKEN = "5709967064:AAHShAP-wOOCfVJlp23nAC-LTOaLJEnXVUM"
bot = telebot.TeleBot(TOKEN, parse_mode=None)

ceo_words = ["—Ä—ã–Ω–æ–∫", "–∫—É—Ä—Å –≤–∞–ª—é—Ç—ã", "–∑–µ—Ä–Ω–æ", "–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç", "–∞–∫—Ü–∏–∏", "–±–∏—Ä–∂–∞", "–∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞", "–§–∏–Ω–∞–Ω—Å—ã", "–±–∞–Ω–∫–∏",
            "–º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è –Ω–∞ —Ä—ã–Ω–∫–µ —Ç—Ä—É–¥–∞", "–∑–∞—Ä–ø–ª–∞—Ç–∞", "—Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏", "–ø—Ä–∞–≤–æ", "–ø—Ä–æ–¥–∞–∂–∏", "—É—Å–ª—É–≥–∏", "–ø–µ—Ä–µ–≥–æ–≤–æ—Ä—ã", "–∫–ª–∏–µ–Ω—Ç—ã","–¥–æ–≥–æ–≤–æ—Ä—ã"]
accountant_words = ['–ø–æ–¥—Ä—è–¥–Ω—ã–π', '–º–Ω–æ–≥–æ–ª–µ—Ç–Ω–∏–π', '—Å—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ', '–≤–Ω–µ–æ–±–æ—Ä–æ—Ç–Ω—ã–π', '–∫–∞–ø–∏—Ç–∞–ª—å–Ω—ã–π', '–Ω–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π', '—Å–ø–æ—Å–æ–±', '–≤–ª–æ–∂–µ–Ω–∏–µ', '–∞–∫—Ç–∏–≤', '–∑–µ–º–ª—è', '–∫–ª—é—á–µ–≤–æ–π',
                    '–ø–µ—Ä–µ–æ—Ü–µ–Ω–∫–∞', '—Å–ª–æ–≤–æ', '—Ü–µ–Ω–∞', '—Å—Ç–æ–∏–º–æ—Å—Ç—å', '–Ω–∞—Å–∞–∂–¥–µ–Ω–∏–µ', '–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ–ª—å–Ω—ã–π', '—Ö–æ–∑—è–π—Å—Ç–≤–µ–Ω–Ω—ã–π', '–∑–∞—Å—Ç—Ä–æ–π—â–∏–∫', '—Å—Ä–µ–¥—Å—Ç–≤–æ', '–ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—ã–π',
                    '–ª–∏–∑–∏–Ω–≥', '–æ–±—ä–µ–∫—Ç', '–æ—Å–Ω–æ–≤–Ω—ã–π', '—Å–ª–æ–≤–æ', '–∫–æ–Ω—Å–µ—Ä–≤–∞—Ü–∏—è', '–ª–∏–∑–∏–Ω–≥–æ–≤—ã–π', '–∞—Ä–µ–Ω–¥–∞', '–∫–∞—Ä—Ç–æ—á–∫–∞', '—Å—Ä–æ–∫', '–∞–º–æ—Ä—Ç–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã–π', '–≥—É–¥–≤–∏–ª—ã',
                    '–∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π', '–æ—Å–Ω–æ–≤–Ω–æ–π', '–∫–ª—é—á–µ–≤–æ–π', '–∏–Ω–≤–µ–Ω—Ç–∞—Ä–Ω—ã–π', '–∏–º—É—â–µ—Å—Ç–≤–æ', '—Å–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–æ', '–≥—Ä—É–ø–ø–∞', '–æ—Å—Ç–∞—Ç–æ—á–Ω—ã–π', '–∞–∫—Ç–∏–≤', '–æ–±—ä–µ–∫—Ç', '—Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π',
                    '–∫–ª—é—á–µ–≤–æ–π', '—Å–ª–æ–≤–æ', '–ø–∞—Ç–µ–Ω—Ç', '–∏–Ω–≤–µ–Ω—Ç–∞—Ä–∏–∑–∞—Ü–∏—è', '–æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤–æ', '—Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å', '–Ω–µ–º–∞—Ç–µ—Ä–∏–∞–ª—å–Ω—ã–π', '–∞–º–æ—Ä—Ç–∏–∑–∞—Ü–∏—è', '—Ö–æ–∑—è–π—Å—Ç–≤–æ', '–ø–µ—Ä–≤–∏—á–Ω—ã–π',
                    '–≥—Ä–∞—Ñ–∏–∫', '–∫—Ä–µ—Å—Ç—å—è–Ω—Å–∫–∏–π', '—Ä–∞–±–æ—á–∏–π', '–±–∞–ª–∞–Ω—Å', '—Ñ–æ—Ä–º–∞', '–º–µ–º–æ—Ä–∏–∞–ª—å–Ω–æ‚Äì–æ—Ä–¥–µ—Ä–Ω—ã–π', '–¥–æ–∫—É–º–µ–Ω—Ç', '–¥–æ–∫—É–º–µ–Ω—Ç–æ–æ–±–æ—Ä–æ—Ç', '–ø–±—É', '–æ–±—ä–µ–∫—Ç', '–∏–º—É—â–µ—Å—Ç–≤–æ',
                    '–∂—É—Ä–Ω–∞–ª—å‚Äì–Ω–æ‚Äì–æ—Ä–¥–µ—Ä–Ω—ã–π', '–±—É—Ö–≥–∞–ª—Ç–µ—Ä—Å–∫–∏–π', '–ø–ª–∞–Ω', '—Ñ–µ—Ä–º–µ—Ä—Å–∫–∏–π', '—É—á—ë—Ç']


all_news = reader("final_news.db")
ceo_news = []
accountant_news = []
ceo_count = 0
accountant_count = 0



def who_is_who(text):
    a = 0
    b = 0
    for i in text.split():
        #print(i)
        if i in ceo_words:
            a += 1
        if i in accountant_words:
            b += 1
    if a < b:
        return "accountant"
    elif a > b: return "ceo"
    else: return 0

print(len(all_news))
print(all_news[0:5])


for i in all_news:
    text = str(i[0])
    if i[2] != "None":
        text += str(i[2])
    if who_is_who(text) == "ceo":
        ceo_news.append([i[0], i[1], text])
    elif who_is_who(text) == "accountant":
        accountant_news.append([i[0], i[1], text])
    


print(ceo_news[0])
print(accountant_news)



#–ß–∞—Å—Ç—å —Å –±–æ—Ç–æ–º
@bot.message_handler(commands=['help'])
def send_welcome(message):
	bot.send_message(message.chat.id, '''–ö–∞–∫–∞—è –ø—Ä–æ–±–ª–µ–º–∞ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∞?''')


@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("üëã –ë—É—Ö–≥–∞–ª—Ç–µ—Ä")
    btn2 = types.KeyboardButton("‚ùì –ì–ª–∞–≤–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")
    markup.add(btn1, btn2)
    bot.send_message(message.chat.id, text="–ü—Ä–∏–≤–µ—Ç, {0.first_name}! \n–Ø –±–æ—Ç, —á—Ç–æ –ø–æ–¥–±–µ—Ä–µ—Ç –¥–ª—è —Ç–µ–±—è —Å–∞–º—ã–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –æ –ø—Ä–æ–∏–∑–æ—à–µ–¥—à–∏—Ö —Å–æ–±—ã—Ç–∏—è—Ö –≤ –º–∏—Ä–µ.".format(message.from_user), reply_markup=markup)
    bot.send_message(message.chat.id, text="–í—ã–±–µ—Ä–∏ —Å–≤–æ—é –¥–æ–ª–∂–Ω–æ—Å—Ç—å –≤ –º–µ–Ω—é –Ω–∏–∂–µ:")


@bot.message_handler(content_types=['text'])
def func(message):
    global ceo_count, accountant_count
    try:
        if(message.text == "üëã –ë—É—Ö–≥–∞–ª—Ç–µ—Ä"):
            bot.send_message(message.chat.id, text="–ò—â–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –¥–ª—è —Ç–µ–±—è..!")
            bot.send_message(message.chat.id, text=str(ceo_news[ceo_count][0]) + "\n" + str(ceo_news[ceo_count][1]))
            ceo_count += 1
    except:
        ceo_count = 0
        bot.send_message(message.chat.id, text="–ò—â–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –¥–ª—è —Ç–µ–±—è..!")
        bot.send_message(message.chat.id, text=str(ceo_news[ceo_count][0]) + "\n" + str(ceo_news[ceo_count][1]))
        ceo_count += 1
    try:
        if(message.text == "‚ùì –ì–ª–∞–≤–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä"):
            bot.send_message(message.chat.id, text="–ò—â–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –¥–ª—è —Ç–µ–±—è..!")
            bot.send_message(message.chat.id, text=str(accountant_news[accountant_count][0]) + "\n" + str(accountant_news[accountant_count][1]))
            accountant_count += 1
    except:
        accountant_count = 0
        bot.send_message(message.chat.id, text="–ò—â–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏ –¥–ª—è —Ç–µ–±—è..!")
        bot.send_message(message.chat.id, text=str(accountant_news[accountant_count][0]) + "\n" + str(accountant_news[accountant_count][1]))
        accountant_count += 1



bot.polling()
